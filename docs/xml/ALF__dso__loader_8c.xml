<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ALF__dso__loader_8c" kind="file" language="C++">
    <compoundname>ALF_dso_loader.c</compoundname>
    <includes refid="ALF__dso__loader_8h" local="yes">ALF_dso_loader.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="259">
        <label>stdlib.h</label>
      </node>
      <node id="256">
        <label>src/extra/ALF_dso_loader.c</label>
        <link refid="ALF_dso_loader.c"/>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>ALF_dso_loader.h</label>
        <link refid="ALF__dso__loader_8h"/>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="258">
        <label>ALF_common.h</label>
        <link refid="ALF__common_8h"/>
      </node>
      <node id="260">
        <label>string.h</label>
      </node>
      <node id="262">
        <label>stdio.h</label>
      </node>
      <node id="261">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ALF__dso__loader_8c_1ae1b435a5149e0b88cddcdee460e4ecbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ALF__dso__loader_8h_1af3792a64fee3466efa5b2191f6ddafa0" kindref="member">ALF_DSO_handl</ref></type>
        <definition>ALF_DSO_handl ALF_DSO_load_file</definition>
        <argsstring>(const char *file)</argsstring>
        <name>ALF_DSO_load_file</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/extra/ALF_dso_loader.c" line="4" column="1" bodyfile="src/extra/ALF_dso_loader.c" bodystart="4" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="ALF__dso__loader_8c_1aa0b2033f4210c48d0573c4c7a3cd498b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ALF__dso__loader_8h_1ac117ba90b55b08361002d8608b15d3a5" kindref="member">ALF_DSO_func</ref></type>
        <definition>ALF_DSO_func ALF_DSO_load_function</definition>
        <argsstring>(ALF_DSO_handl handler, const char *function)</argsstring>
        <name>ALF_DSO_load_function</name>
        <param>
          <type><ref refid="ALF__dso__loader_8h_1af3792a64fee3466efa5b2191f6ddafa0" kindref="member">ALF_DSO_handl</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/extra/ALF_dso_loader.c" line="14" column="1" bodyfile="src/extra/ALF_dso_loader.c" bodystart="14" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="ALF__dso__loader_8c_1aed8b2aba3c4f1d914a1edd73cf617fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ALF_DSO_close_file</definition>
        <argsstring>(ALF_DSO_handl handler)</argsstring>
        <name>ALF_DSO_close_file</name>
        <param>
          <type><ref refid="ALF__dso__loader_8h_1af3792a64fee3466efa5b2191f6ddafa0" kindref="member">ALF_DSO_handl</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/extra/ALF_dso_loader.c" line="24" column="1" bodyfile="src/extra/ALF_dso_loader.c" bodystart="24" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="ALF__dso__loader_8c_1a9e56afd91fd7a6e49ed84066a8a53500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ALF_DSO_get_last_error</definition>
        <argsstring>(void)</argsstring>
        <name>ALF_DSO_get_last_error</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/extra/ALF_dso_loader.c" line="34" column="1" bodyfile="src/extra/ALF_dso_loader.c" bodystart="34" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ALF__dso__loader_8h" kindref="compound">ALF_dso_loader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="ALF__dso__loader_8h_1af3792a64fee3466efa5b2191f6ddafa0" kindref="member">ALF_DSO_handl</ref><sp/><ref refid="ALF__dso__loader_8c_1ae1b435a5149e0b88cddcdee460e4ecbf" kindref="member">ALF_DSO_load_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file){</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ALF__dso__loader_8h_1af3792a64fee3466efa5b2191f6ddafa0" kindref="member">ALF_DSO_handl</ref><sp/>handler<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler<sp/>=<sp/>(<ref refid="ALF__dso__loader_8h_1af3792a64fee3466efa5b2191f6ddafa0" kindref="member">ALF_DSO_handl</ref>)LoadLibrary(file);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler<sp/>=<sp/>(<ref refid="ALF__dso__loader_8h_1af3792a64fee3466efa5b2191f6ddafa0" kindref="member">ALF_DSO_handl</ref>)dlopen(file,<sp/>RTLD_LAZY);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="ALF__dso__loader_8h_1ac117ba90b55b08361002d8608b15d3a5" kindref="member">ALF_DSO_func</ref><sp/><ref refid="ALF__dso__loader_8c_1aa0b2033f4210c48d0573c4c7a3cd498b" kindref="member">ALF_DSO_load_function</ref>(<ref refid="ALF__dso__loader_8h_1af3792a64fee3466efa5b2191f6ddafa0" kindref="member">ALF_DSO_handl</ref><sp/>handler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">function</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ALF__dso__loader_8h_1ac117ba90b55b08361002d8608b15d3a5" kindref="member">ALF_DSO_func</ref><sp/>func<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/>(<ref refid="ALF__dso__loader_8h_1ac117ba90b55b08361002d8608b15d3a5" kindref="member">ALF_DSO_func</ref>)GetProcAddress((HMODULE)handler,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/>(<ref refid="ALF__dso__loader_8h_1ac117ba90b55b08361002d8608b15d3a5" kindref="member">ALF_DSO_func</ref>)dlsym(handler,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>func;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ALF__dso__loader_8c_1aed8b2aba3c4f1d914a1edd73cf617fb1" kindref="member">ALF_DSO_close_file</ref>(<ref refid="ALF__dso__loader_8h_1af3792a64fee3466efa5b2191f6ddafa0" kindref="member">ALF_DSO_handl</ref><sp/>handler){</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>!FreeLibrary((HMODULE)handler);<sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>nonzero<sp/>in<sp/>success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>dlclose(handler);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="ALF__dso__loader_8c_1a9e56afd91fd7a6e49ed84066a8a53500" kindref="member">ALF_DSO_get_last_error</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>__WIN32__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>32);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(result,<sp/></highlight><highlight class="stringliteral">&quot;%lu&quot;</highlight><highlight class="normal">,<sp/>GetLastError());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aux<sp/>=<sp/>dlerror();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>(strlen(aux)<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(result,<sp/>aux);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="50"><highlight class="comment">typedef<sp/>int<sp/>(*example_function)(int);</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">#include<sp/>&lt;stdio.h&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="comment">int<sp/>main(){</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>ALF_DSO_handl<sp/>handler<sp/>=<sp/>S_DSO_load_file(&quot;./test.so&quot;);</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>if(handler<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;\t1<sp/>-<sp/>error:<sp/>%s\n&quot;,<sp/>S_DSO_get_last_error());</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>ALF_DSO_func<sp/>test_func<sp/>=<sp/>S_DSO_load_function(handler,<sp/>&quot;test_func&quot;);</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>if(test_func<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;\t2<sp/>-<sp/>error:<sp/>%s\n&quot;,<sp/>S_DSO_get_last_error());</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>2;</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%i\n&quot;,<sp/>((example_function)test_func)(2));</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>if(S_DSO_close_file(handler)<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;\t3<sp/>-<sp/>error:<sp/>%s\n&quot;,<sp/>S_DSO_get_last_error());</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>3;</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>printf(&quot;%i\n&quot;,<sp/>((example_function)test_func)(-4));</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="comment">}</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/extra/ALF_dso_loader.c"/>
  </compounddef>
</doxygen>
